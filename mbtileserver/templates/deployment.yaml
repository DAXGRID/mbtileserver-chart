apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Release.Name }}-{{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}
    spec:
      shareProcessNamespace: true
      volumes:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Chart.Name }}
      containers:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
              mountPath: {{ .Values.storage.path }}
          args:
            {{- range .Values.commandArgs }}
            - {{ . }}
            {{- end }}
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-busybox
          image: openftth/inotify:v4
          volumeMounts:
            - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
              mountPath: {{ .Values.storage.path }}
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          command: ["/bin/sh", "-c", "while inotifywait -r {{ .Values.storage.path }} -e create,delete,modify; do { kill -HUP $(pgrep mbtileserver); }; done"]
      restartPolicy: Always
